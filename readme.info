#############################################
# SETUP
#############################################
# init the module on location of main package
go mod init 
go build
./moonlander


#############################################
# go install + code completion + tooling
#############################################
https://golang.org/doc/install?download=go1.15.2.linux-amd64.tar.gz#download
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf go1.15.2.linux-amd64.tar.gz
export PATH=$PATH:/usr/local/go/bin

ctrl+shift+p 
go: install / update tools
go: Locate configures go tools

# Use go Language Server (gopls)
ctrl + comma
extensions >> go >> check Use Language Server
(just search for "Use Language Server")

# fix for gopls bug
# sets goroot in visual studio code (for when you not setting it as environt variable)
ctrl +  comma >> search >>  "go.goroot"
"go.goroot": "/usr/local/go",


#############################################
# IMPORT NOTES
#############################################
Ebiten
using master for text.BoundString() functionality
go get github.com/hajimehoshi/ebiten@master


#############################################
# DEBUG
#############################################
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${workspaceFolder}",
            "env": {},
            "args": []
        },
        {
            "name": "Debug",
            "type": "go",
            "request": "launch",
            "mode": "debug",
            "program": "${workspaceFolder}",
            "env": {},
            "args": []
        }
    ]
}


#############################################
# TODO
#############################################
 
- attach them (interface + composition, entity based design?)
- make fuel mechanic's
- add limited nr of lives
- create animation object
- draw effects for retro + main thrusters
    - animations
    - animation of thrusters can be used on 4 sides, so be part of player anim because 4*3*2*1 anims
    - animations must be a sub gfx of player, and should then also rotate with player

- make background components, which stretches image to screen 
- make background which loop-able with a camera

#############################################
# run / test WebAssembly
#############################################
cd /home/rob/work/projects/go/src/moonlander
wasmserve 


#############################################
# build WebAssembly 
#############################################

# add mine type to ngninx
sudo nano /etc/nginx/mime.types
application/wasm                                wasm;
sudo systemctl restart nginx

# clear cache or use incognito mode
http://localhost/wasm/index.html



